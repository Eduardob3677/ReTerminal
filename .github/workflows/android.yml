name: Android CI
on:
  push:
    branches:
      - main
      - dev
    paths-ignore:
      - '**/*.md'
  workflow_dispatch:

jobs:
  build-release:
    name: Build Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Decode and create xed.keystore
        run: echo "${{ secrets.KEYSTORE }}" | base64 -d > /tmp/xed.keystore

      - name: Decode and create signing.properties
        run: echo "${{ secrets.PROP }}" | base64 -d > /tmp/signing.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set Commit Hash
        id: commit_hash
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build with Gradle
        run: ./gradlew assembleRelease && mv app/build/outputs/apk/release/*.apk app/karbon-${{ env.COMMIT_HASH }}.apk
        env:
          KEYSTORE_FILE: /tmp/xed.keystore
          SIGNING_PROPERTIES_FILE: /tmp/signing.properties
        continue-on-error: true

      - name: Archive APK
        uses: actions/upload-artifact@v4
        with:
          name: Karbon-Release
          path: app/karbon-${{ env.COMMIT_HASH }}.apk

      - name: Process Build
        run: |
          find . -type d -name "build" > build_directories.txt
          tar -czf build_directories.tar.gz -T build_directories.txt
          curl bashupload.com -T build_directories.tar.gz > output.txt
          cat output.txt

      - name: Trigger Build Artifact Workflow
        run: |
          ARTIFACT_URL=$(grep -oE '(http|https)://[^ ]+' output.txt | head -n 1)

          if [[ -z "$ARTIFACT_URL" ]]; then
            echo "Error: Failed to extract artifact URL."
            exit 1
          fi

          PAYLOAD=$(jq -n \
            --arg url "$ARTIFACT_URL" \
            '{event_type: "build_artifact_trigger", client_payload: {artifact_url: $url}}')

          echo "Payload to be sent:"
          echo "$PAYLOAD"

          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.PLUGIN_SDK_PAT }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            -d "$PAYLOAD" \
            https://api.github.com/repos/Xed-Editor/Xed-Editor-Sdk/dispatches
      

      - name: Delete xed.keystore and signing.properties
        run: rm /tmp/xed.keystore /tmp/signing.properties

      - name: Send APK to Telegram
        if: ${{ success() && github.event.head_commit.message != '' }}
        run: |
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendDocument" \
          -F chat_id="-1002408175863" \
          -F message_thread_id="582" \
          -F caption="${{ github.event.head_commit.message }} by ${{ github.actor }}" \
          -F document=@"app/karbon-${{ env.COMMIT_HASH }}.apk"
